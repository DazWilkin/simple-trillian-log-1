#
# TAG=$(git rev-parse HEAD)
# gcloud builds submit \
# --config=./cloudbuild.yaml \
# --substitutions=COMMIT_SHA=${TAG} \
# --project=${PROJECT}
#

options:
  env:
  - GO111MODULE=on
  - GOPROXY=https://proxy.golang.org
  volumes:
  - name: go-modules
    path: /go

steps:

# Get protoc plugins and compile protos
# `Golang` image uses `/go` as a working directory
# Cloud Build uses `/workspace` as a working directory
# Source code is in `/workspace` and Golang packages go to `/go/pkg`
# Volume is used to share `/go` across multiple steps
# GOPATH is redundant; default
# Gets protoc-gen-go which is the Golang plugin for protoc
- name: golang:1.12
  args:
  - go
  - get
  - -u
  - github.com/golang/protobuf/protoc-gen-go

# Gets protoc-gen-grpc-gateway which is the gRPC Transcoding Gateway plugin
# Get a specific version (v1.9.3) in order to be able to provide protoc (see below) with a specific directory path
- name: golang:1.12
  args:
  - go
  - get
  - -u
  - github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway@v1.9.3

# Protoc
# As a community builder this image must be created manually before use
# By default protoc expects plugins (protoc-gen-go; protoc-gen-grpc-gateway) on PATH
# But this is challenging (possible?) with Cloud Build
# Instead this step explicitly references the plugins (pulled in previous steps)
# Using `--plugin=...` flag
- name: gcr.io/${PROJECT_ID}/protoc:3.8.0-linux-x86_64
  args:
  - --proto_path=./protos
  - --proto_path=/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.9.3/third_party/googleapis
  - --plugin=protoc-gen-go=/go/bin/protoc-gen-go
  - --plugin=protoc-gen-grpc-gateway=/go/bin/protoc-gen-grpc-gateway
  - --go_out=plugins=grpc:/go/src
  - --grpc-gateway_out=logtostderr=true:/go/src
  - ./protos/basic_personality.proto
  - ./protos/health.proto

# Relocate protoc-generated Golang files
# from ${GOPATH}/src/github.com/google/image-transparency/protos
# to   ./protos
# For some reason (!?) the wildcard is only possible shelling like this
- name: busybox
  args:
  - sh
  - -c
  - 'mv /go/src/github.com/DazWilkin/basic-personality/protos/*.go ./protos'

# Tidy
- name: busybox
  args:
  - rm
  - -rf
  - /go/src

# Build Server
- name: golang:1.12
  env:
  - CGO_ENABLED=0
  - GOOS=linux
  args:
  - go
  - build
  - -a
  - -installsuffix
  - cgo
  - -o
  - ./bin/server
  - github.com/DazWilkin/basic-personality/server


# Build Server container image
- name: "gcr.io/cloud-builders/docker"
  args:
  - build
  - --file=./deployment/Dockerfile.cloudbuild.server
  - --tag=gcr.io/${PROJECT_ID}/server:${COMMIT_SHA}
  - "."

# Build Client
- name: golang:1.12
  env:
  - CGO_ENABLED=0
  - GOOS=linux
  args:
  - go
  - build
  - -a
  - -installsuffix
  - cgo
  - -o
  - ./bin/client
  - github.com/DazWilkin/basic-personality/client

# Build Client container image
- name: "gcr.io/cloud-builders/docker"
  args:
  - build
  - --file=./deployment/Dockerfile.cloudbuild.client
  - --tag=gcr.io/${PROJECT_ID}/client:${COMMIT_SHA}
  - "."

# Push the images
images:
- gcr.io/${PROJECT_ID}/server
- gcr.io/${PROJECT_ID}/client