# Dependencies:
# Assumes db 'test' database is created see README.md
#
# Environment variables must be exported:
# LOGID -- Trillian Log ID must be created beforehand

version: "3"

services:

  prometheus:
    image: prom/prometheus:v2.10.0
    container_name: prometheus
    volumes:
    - "${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml"
    expose:
    - "9090" # Default HTTP Endpoint
    ports:
    - 9090:9090
    healthcheck:
      test:
      - CMD
      - curl
      - --fail
      - "http://localhost:9090/-/healthy"

  opencensus-agent:
    image: omnition/opencensus-agent:0.1.8
    container_name: opencensus-agent
    command:
    - --config=/configs/ocagent.yaml
    volumes:
    - "${PWD}/ocagent.yaml:/configs/ocagent.yaml"
    expose:
    - "9100"  # ocagent.yaml defined Prometheus Exporter
    - "9999"  # ocagent.yaml defined zPages
    - "55678" # ocagent.yaml defined OpenCensus Receiver
    ports:
    - 9100:9100 # Debugging: Prometheus Metrics Exporter
    - 9999:9999 # Debugging: zPages
    healthcheck:
      test:
      - CMD
      - curl
      - --fail
      - "http://localhost:9090/metrics"
      interval: 30s
      timeout: 30s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:1.13
    container_name: jaeger
    expose:
    - "14268" # Collector: Accepts jager.thrift (?)
    - "14269" # Collector: Accepts Thrift; Transcodes Prometheus Metrics Exporteer (/metrics)
    - "14250" # Collector: Accepts model.proto (?)
    - "16686" # HTTP UI
    ports:
    - 6831:6831/udp
    - 14269:14269
    - 16686:16686
  
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    expose:
    - "9411"
    ports:
      - 9411:9411

  # Assumes "test" database has been initialized outside (!) of Docker Compose (mysql-data)
  db:
    image: mariadb:10.4.6
    container_name: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: test
      MYSQL_USER: test
      MYSQL_PASSWORD: zaphod
    volumes:
    - "trillian-data:/var/lib/mysql"
    expose:
    - "3306"

  # For Debugging
  adminer:
    depends_on:
    - db
    image: adminer:4.7.1
    container_name: adminer
    ports:
    - 7777:8080

  basic-personality-server:
    depends_on:
    - opencensus-agent
    - trillian-log-server
    image: us.gcr.io/basic-personality/basic-personality-server:stackdriver-direct-plus
    container_name: basic-personality-server
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.server
      args:
        BRANCH: jaeger-direct
        VERS: 3.8.0
        ARCH: linux-x86_64
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/client_secret.json
    volumes:
    - "${PWD}/client_secret.json:/secrets/client_secret.json"
    command:
    - --project_id=dazwilkin-190707-basic-perso
    - --grpc_endpoint=:50051
    - --http_endpoint=:8080
    - --jeag_endpoint=jaeger:6831
    - --jeoc_endpoint=jaeger:14268/api/traces
    - --ocag_endpoint=opencensus-agent:55678
    - --zpgz_endpoint=:9999
    - --tlog_endpoint=trillian-log-server:50051
    - --tlog_id=${LOGID}
    expose:
    - "50051" # gRPC
    - "8080"  # HTTP
    - "9999"  # zPages
    ports:
    - 8080:8080
    - 9998:9999

  basic-personality-client:
    depends_on:
    - opencensus-agent
    - basic-personality-server
    image: us.gcr.io/basic-personality/basic-personality-client@sha256:1f27448924857a47d41af2506cc117c99fcb999ea35a325bf15119b54e09a130
    container_name: basic-personality-client
    restart: always
    # build:
    #   context: .
    #   dockerfile: ./Dockerfile.client
    #   args:
    #   - BRANCH=opencensus
    #   - VERS=3.8.0
    #   - ARCH=linux-x86_64
    command:
    - --grpc_endpoint=basic-personality-server:50051
    - --ocag_endpoint=opencensus-agent:55678
    - --zpgz_endpoint=:9999
    expose:
    - "9999" # zPages
    ports:
    - 9997:9999

  trillian-log-server:
    depends_on:
    - db
    # See https://console.cloud.google.com/gcr/images/trillian-opensource-ci/GLOBAL        
    image: gcr.io/trillian-opensource-ci/log_server@sha256:f3ba85189d599d2752e57e71b641100e711683b9b8e1d4f17769e047a2864cea
    container_name: trillian-log-server
    restart: always
    command:
    - --mysql_uri=test:zaphod@tcp(db:3306)/test
    - --rpc_endpoint=:50051
    - --http_endpoint=:8080
    - --alsologtostderr
    expose:
    - "8080"  # HTTP includes prometheus metrics
    - "50051" # gRPC
    ports:
    - "54051:50051" # Expose gRPC Endpoint to host to permit log creation externally

  trillian-log-signer:
    depends_on:
    - db
    # See https://console.cloud.google.com/gcr/images/trillian-opensource-ci/GLOBAL
    image: gcr.io/trillian-opensource-ci/log_signer@sha256:d17bdcce6c6adf602ad57aa15d18ea4a72259a86b2017a2377442bd972b594d9
    container_name: trillian-log-signer
    restart: always
    command:
    - --mysql_uri=test:zaphod@tcp(db:3306)/test
    - --rpc_endpoint=:50051
    - --http_endpoint=:8080
    - --batch_size=1000
    - --sequencer_guard_window=0
    - --sequencer_interval=200ms
    - --force_master
    - --logtostderr
    expose:
    - "8080"  # HTTP includes prometheus metrics
    - "50051" # gRPC

volumes:
  trillian-data:
    external: true
